apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: autogpt
  annotations:
    kompose.cmd: C:\Program Files\Amazon\AWSCLIV2\kompose.exe convert -v -f .\docker-compose.yml
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: kong
  name: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kong
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Amazon\AWSCLIV2\kompose.exe convert -v -f .\docker-compose.yml
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: kong
    spec:
      containers:
        - command:
            - bash
            - -c
            - eval "echo \"$(cat ~/temp1/temp.yml)\"" > ~/kong.yml && /docker-entrypoint.sh kong docker-start
          env:
            - name: DASHBOARD_PASSWORD
              value: this_password_is_insecure_and_should_be_updated
            - name: DASHBOARD_USERNAME
              value: supabase
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_DECLARATIVE_CONFIG
              value: /home/kong/kong.yml
            - name: KONG_DNS_ORDER
              value: LAST,A,CNAME
            - name: KONG_NGINX_PROXY_PROXY_BUFFERS
              value: 64 160k
            - name: KONG_NGINX_PROXY_PROXY_BUFFER_SIZE
              value: 160k
            - name: KONG_PLUGINS
              value: request-transformer,cors,key-auth,acl,basic-auth
            - name: SUPABASE_ANON_KEY
              value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
            - name: SUPABASE_SERVICE_KEY
              value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q
          image: kong:2.8.1
          name: supabase-kong
          ports:
            - containerPort: 8000
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          volumeMounts:
            - mountPath: /home/kong/temp1/
              name: kong-claim0
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: kong-claim0
          persistentVolumeClaim:
            claimName: kong-claim0
            readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  namespace: autogpt
  annotations:
    kompose.cmd: C:\Program Files\Amazon\AWSCLIV2\kompose.exe convert -v -f .\docker-compose.yml
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: kong
  name: kong
spec:
  type: NodePort
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
    - name: "8443"
      port: 8443
      targetPort: 8443
  selector:
    io.kompose.service: kong
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agpt-kong
  namespace: autogpt
  annotations:
    kubernetes.io/ingress.class: alb
    # spec.ingressClassName: alb
    alb.ingress.kubernetes.io/scheme: internet-facing 
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:582822331796:certificate/3f30d5a3-4e52-4ed9-a1e2-fe07c0c2dc99
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=600
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '100'
    alb.ingress.kubernetes.io/load-balancer-name: autogpt-agpt-kong
    # alb.ingress.kubernetes.io/group.name: ingressgroup-cta
    alb.ingress.kubernetes.io/rewrite-target: "/$1"
  labels:
    version: "1.002"
spec:
  defaultBackend:
    service:
      name: kong
      port:
        number: 8000

